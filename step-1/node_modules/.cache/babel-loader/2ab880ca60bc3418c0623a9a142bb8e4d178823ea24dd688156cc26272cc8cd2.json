{"ast":null,"code":"const Contact = require('./Contact');\nconst data = require('./data.json');\nclass AddressBook {\n  constructor() {\n    this.contacts = data.map(({\n      first_name,\n      last_name,\n      phone,\n      email\n    }) => new Contact(first_name, last_name, phone, email));\n  }\n  convert_contact_to_JSON(contact, index) {\n    return {\n      index: index,\n      first_name: contact.get_first_name(),\n      last_name: contact.get_last_name(),\n      phone: contact.get_phone(),\n      email: contact.get_email()\n    };\n  }\n  view_all() {\n    const data = this.contacts.map((contact, index) => this.convert_contact_to_JSON(contact, index));\n    return data;\n  }\n  delete_contact(index) {\n    this.contacts.splice(index, 1);\n  }\n  add_contact(data) {\n    this.contacts.push(new Contact(data.first_name, data.last_name, data.phone, data.email));\n  }\n  search_contacts(data) {\n    if (data.query) {\n      const l_query = data.query.toLowerCase();\n      return this.contacts.reduce((result, contact, index) => {\n        const l_first_name = contact.get_first_name().toLowerCase();\n        const l_last_name = contact.get_last_name().toLowerCase();\n        const phone = contact.get_phone();\n        const l_email = contact.get_first_name().toLowerCase();\n        if (l_first_name.includes(l_query) || l_last_name.includes(l_query) || phone.includes(l_query) || l_email.includes(l_query)) {\n          const contact_JSON = this.convert_contact_to_JSON(contact, index);\n          result.push(contact_JSON);\n        }\n        return result;\n      }, []);\n    }\n  }\n}\nmodule.exports = AddressBook;","map":{"version":3,"names":["Contact","require","data","AddressBook","constructor","contacts","map","first_name","last_name","phone","email","convert_contact_to_JSON","contact","index","get_first_name","get_last_name","get_phone","get_email","view_all","delete_contact","splice","add_contact","push","search_contacts","query","l_query","toLowerCase","reduce","result","l_first_name","l_last_name","l_email","includes","contact_JSON","module","exports"],"sources":["/Users/mac/Documents/propel-tech/frontend/src/components/AddressBook.js"],"sourcesContent":["const Contact = require('./Contact');\nconst data = require('./data.json');\n\nclass AddressBook {\n    constructor(){\n        this.contacts = data.map(\n            ({ first_name, last_name, phone, email }) =>\n              new Contact(first_name, last_name, phone, email)\n          );\n    }\n\n    convert_contact_to_JSON(contact, index) {\n        return {\n            index: index,\n            first_name: contact.get_first_name(),\n            last_name: contact.get_last_name(),\n            phone: contact.get_phone(),\n            email: contact.get_email()\n        };\n    }\n\n    view_all() {\n        const data =  this.contacts.map((contact, index) => this.convert_contact_to_JSON(contact, index));\n        return data;\n    }\n\n    delete_contact(index) {\n        this.contacts.splice(index, 1);\n    }\n\n    add_contact(data) {\n        this.contacts.push(new Contact(data.first_name, data.last_name, data.phone, data.email))\n    }\n\n    search_contacts(data) {\n        if (data.query ){\n        const l_query = data.query.toLowerCase();\n        return this.contacts.reduce((result, contact, index) => {\n            const l_first_name = contact.get_first_name().toLowerCase();\n            const l_last_name = contact.get_last_name().toLowerCase();\n            const phone = contact.get_phone();\n            const l_email = contact.get_first_name().toLowerCase();\n\n            if(\n                l_first_name.includes(l_query) || l_last_name.includes(l_query) || phone.includes(l_query) || l_email.includes(l_query)\n            ) {\n                const contact_JSON = this.convert_contact_to_JSON(contact, index);\n                result.push(contact_JSON);\n            }\n\n            return result;\n        }, []);\n    }\n    }\n}\n\nmodule.exports = AddressBook;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,IAAI,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEnC,MAAME,WAAW,CAAC;EACdC,WAAWA,CAAA,EAAE;IACT,IAAI,CAACC,QAAQ,GAAGH,IAAI,CAACI,GAAG,CACpB,CAAC;MAAEC,UAAU;MAAEC,SAAS;MAAEC,KAAK;MAAEC;IAAM,CAAC,KACtC,IAAIV,OAAO,CAACO,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,CACnD,CAAC;EACP;EAEAC,uBAAuBA,CAACC,OAAO,EAAEC,KAAK,EAAE;IACpC,OAAO;MACHA,KAAK,EAAEA,KAAK;MACZN,UAAU,EAAEK,OAAO,CAACE,cAAc,CAAC,CAAC;MACpCN,SAAS,EAAEI,OAAO,CAACG,aAAa,CAAC,CAAC;MAClCN,KAAK,EAAEG,OAAO,CAACI,SAAS,CAAC,CAAC;MAC1BN,KAAK,EAAEE,OAAO,CAACK,SAAS,CAAC;IAC7B,CAAC;EACL;EAEAC,QAAQA,CAAA,EAAG;IACP,MAAMhB,IAAI,GAAI,IAAI,CAACG,QAAQ,CAACC,GAAG,CAAC,CAACM,OAAO,EAAEC,KAAK,KAAK,IAAI,CAACF,uBAAuB,CAACC,OAAO,EAAEC,KAAK,CAAC,CAAC;IACjG,OAAOX,IAAI;EACf;EAEAiB,cAAcA,CAACN,KAAK,EAAE;IAClB,IAAI,CAACR,QAAQ,CAACe,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;EAClC;EAEAQ,WAAWA,CAACnB,IAAI,EAAE;IACd,IAAI,CAACG,QAAQ,CAACiB,IAAI,CAAC,IAAItB,OAAO,CAACE,IAAI,CAACK,UAAU,EAAEL,IAAI,CAACM,SAAS,EAAEN,IAAI,CAACO,KAAK,EAAEP,IAAI,CAACQ,KAAK,CAAC,CAAC;EAC5F;EAEAa,eAAeA,CAACrB,IAAI,EAAE;IAClB,IAAIA,IAAI,CAACsB,KAAK,EAAE;MAChB,MAAMC,OAAO,GAAGvB,IAAI,CAACsB,KAAK,CAACE,WAAW,CAAC,CAAC;MACxC,OAAO,IAAI,CAACrB,QAAQ,CAACsB,MAAM,CAAC,CAACC,MAAM,EAAEhB,OAAO,EAAEC,KAAK,KAAK;QACpD,MAAMgB,YAAY,GAAGjB,OAAO,CAACE,cAAc,CAAC,CAAC,CAACY,WAAW,CAAC,CAAC;QAC3D,MAAMI,WAAW,GAAGlB,OAAO,CAACG,aAAa,CAAC,CAAC,CAACW,WAAW,CAAC,CAAC;QACzD,MAAMjB,KAAK,GAAGG,OAAO,CAACI,SAAS,CAAC,CAAC;QACjC,MAAMe,OAAO,GAAGnB,OAAO,CAACE,cAAc,CAAC,CAAC,CAACY,WAAW,CAAC,CAAC;QAEtD,IACIG,YAAY,CAACG,QAAQ,CAACP,OAAO,CAAC,IAAIK,WAAW,CAACE,QAAQ,CAACP,OAAO,CAAC,IAAIhB,KAAK,CAACuB,QAAQ,CAACP,OAAO,CAAC,IAAIM,OAAO,CAACC,QAAQ,CAACP,OAAO,CAAC,EACzH;UACE,MAAMQ,YAAY,GAAG,IAAI,CAACtB,uBAAuB,CAACC,OAAO,EAAEC,KAAK,CAAC;UACjEe,MAAM,CAACN,IAAI,CAACW,YAAY,CAAC;QAC7B;QAEA,OAAOL,MAAM;MACjB,CAAC,EAAE,EAAE,CAAC;IACV;EACA;AACJ;AAEAM,MAAM,CAACC,OAAO,GAAGhC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}